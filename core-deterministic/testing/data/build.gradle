apply plugin: 'kotlin'

configurations {
    testData
}

dependencies {
    testCompile project(':core')
    testCompile project(':finance:workflows')
    testCompile project(':node-driver')
    testCompile project(path: ':core-deterministic:testing:verifier', configuration: 'runtimeArtifacts')

    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile "org.jetbrains.kotlin:kotlin-reflect"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junit_jupiter_version}"
    testCompile "junit:junit:${junit4_version}"

    testRuntime "org.junit.vintage:junit-vintage-engine:${junit_vintage_version}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_version}"
    testRuntime "org.junit.platform:junit-platform-launcher:${junit_platform_version}"
}

jar.enabled = false

test {
    filter {
        // Running this class is the whole point, so include it explicitly.
        includeTestsMatching "net.corda.deterministic.data.GenerateData"
    }
    // force execution of these tests to generate artifacts required by other module (eg. VerifyTransactionTest)
    // note: required by Gradle Build Cache.
    outputs.upToDateWhen { false }
}
assemble.finalizedBy test

artifacts {
    testData file: file("$buildDir/test-data.jar"), type: 'jar', builtBy: test
}
