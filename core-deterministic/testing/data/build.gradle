plugins {
    id 'org.jetbrains.kotlin.jvm'
}

configurations {
    testData {
        canBeResolved = false
    }
}

dependencies {
    testImplementation project(':core')
    testImplementation project(':finance:contracts')
    testImplementation project(':finance:workflows')
    testImplementation project(':node-driver')
    testImplementation project(':core-test-utils')
    testImplementation project(':test-utils')
    testImplementation project(path: ':core-deterministic:testing:verifier', configuration: 'runtimeArtifacts')

    testImplementation "org.jetbrains.kotlin:kotlin-reflect"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "junit:junit:$junit_version"

    // Bouncy castle support needed for X509 certificate manipulation
    testImplementation "org.bouncycastle:bcprov-debug-jdk18on:${bouncycastle_version}"
    testImplementation "org.bouncycastle:bcpkix-debug-jdk18on:${bouncycastle_version}"

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit_vintage_version}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junit_platform_version}"

}

tasks.named('jar', Jar) {
    enabled = false
}

def test = tasks.named('test', Test) {
    filter {
        // Running this class is the whole point, so include it explicitly.
        includeTestsMatching "net.corda.deterministic.data.GenerateData"
    }
    // force execution of these tests to generate artifacts required by other module (eg. VerifyTransactionTest)
    // note: required by Gradle Build Cache.
    outputs.upToDateWhen { false }
}

def testDataJar = file("$buildDir/test-data.jar")
artifacts {
    archives file: testDataJar, type: 'jar', builtBy: test
    testData file: testDataJar, type: 'jar', builtBy: test
}
