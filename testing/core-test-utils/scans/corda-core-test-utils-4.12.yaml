# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.testing.contracts.DummyContract:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.Contract
  interface: false
  methods:
    component1:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Object
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyContract
      params:
        blank:
          annotation:
            - Nullable
          type: Object
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    generateInitial:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        magicNumber:
          annotation: []
          type: int
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        owner:
          annotation:
            - NotNull
          type: net.corda.core.contracts.PartyAndReference
        otherOwners:
          annotation:
            - NotNull
          type: "net.corda.core.contracts.PartyAndReference[]"
    getBlank:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Object
    getPROGRAM_ID:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    move:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        priors:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.contracts.StateAndRef<net.corda.testing.contracts.DummyContract$SingleOwnerState>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.contracts.DummyContract$Companion
    PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.contracts.DummyContract
net.corda.testing.contracts.DummyContract$Commands:
  annotations: []
  type: public static interface
  extends:
    - net.corda.core.contracts.CommandData
  interface: true
  methods: {}
net.corda.testing.contracts.DummyContract$Commands$Create:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContract$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContract$Commands$Move:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContract$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContract$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    generateInitial:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        magicNumber:
          annotation: []
          type: int
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        owner:
          annotation:
            - NotNull
          type: net.corda.core.contracts.PartyAndReference
        otherOwners:
          annotation:
            - NotNull
          type: "net.corda.core.contracts.PartyAndReference[]"
    move:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        priors:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.contracts.StateAndRef<net.corda.testing.contracts.DummyContract$SingleOwnerState>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.contracts.DummyContract$MultiOwnerState:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.testing.contracts.DummyContract$State
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyContract$MultiOwnerState
      params:
        magicNumber:
          annotation: []
          type: int
        owners:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMagicNumber:
      annotations: []
      default: false
      type: public
      returnType: int
    getOwners:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.contracts.DummyContract$SingleOwnerState:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.OwnableState
    - net.corda.testing.contracts.DummyContract$State
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.AbstractParty
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyContract$SingleOwnerState
      params:
        magicNumber:
          annotation: []
          type: int
        owner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMagicNumber:
      annotations: []
      default: false
      type: public
      returnType: int
    getOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withNewOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.CommandAndState
      params:
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.contracts.DummyContract$State:
  annotations: []
  type: public static interface
  extends:
    - net.corda.core.contracts.ContractState
  interface: true
  methods:
    getMagicNumber:
      annotations: []
      default: false
      type: public abstract
      returnType: int
net.corda.testing.contracts.DummyContractV2:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.UpgradedContractWithLegacyConstraint
  interface: false
  methods:
    getLegacyContract:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getLegacyContractConstraint:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.AttachmentConstraint
    move:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        priors:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.contracts.StateAndRef<net.corda.testing.contracts.DummyContractV2$State>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    upgrade:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.contracts.DummyContractV2$State
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.testing.contracts.DummyContract$State
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.contracts.DummyContractV2$Companion
    PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.contracts.DummyContractV2
net.corda.testing.contracts.DummyContractV2$Commands:
  annotations: []
  type: public static interface
  extends:
    - net.corda.core.contracts.CommandData
  interface: true
  methods: {}
net.corda.testing.contracts.DummyContractV2$Commands$Create:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContractV2$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContractV2$Commands$Move:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContractV2$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContractV2$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    move:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        priors:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.contracts.StateAndRef<net.corda.testing.contracts.DummyContractV2$State>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.contracts.DummyContractV2$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.ContractState
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyContractV2$State
      params:
        magicNumber:
          annotation: []
          type: int
        owners:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMagicNumber:
      annotations: []
      default: false
      type: public final
      returnType: int
    getOwners:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withNewOwner:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.testing.contracts.DummyContractV2$Commands,\
        \ net.corda.testing.contracts.DummyContractV2$State>"
      params:
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.contracts.DummyContractV3:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.UpgradedContractWithLegacyConstraint
  interface: false
  methods:
    getLegacyContract:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getLegacyContractConstraint:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.AttachmentConstraint
    upgrade:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.contracts.DummyContractV3$State
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.testing.contracts.DummyContractV2$State
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.contracts.DummyContractV3$Companion
    PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.contracts.DummyContractV3
net.corda.testing.contracts.DummyContractV3$Commands:
  annotations: []
  type: public static interface
  extends:
    - net.corda.core.contracts.CommandData
  interface: true
  methods: {}
net.corda.testing.contracts.DummyContractV3$Commands$Create:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContractV3$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContractV3$Commands$Move:
  annotations: []
  type: public static final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements:
    - net.corda.testing.contracts.DummyContractV3$Commands
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContractV3$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.contracts.DummyContractV3$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.ContractState
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyContractV3$State
      params:
        magicNumber:
          annotation: []
          type: int
        owners:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMagicNumber:
      annotations: []
      default: false
      type: public final
      returnType: int
    getOwners:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.contracts.DummyState:
  annotations:
    - BelongsToContract
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.ContractState
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.contracts.DummyState
      params:
        magicNumber:
          annotation: []
          type: int
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMagicNumber:
      annotations: []
      default: false
      type: public final
      returnType: int
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.core.DummyCommandData:
  annotations: []
  type: public final class
  extends: net.corda.core.contracts.TypeOnlyCommandData
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.core.DummyCommandData
net.corda.testing.core.Expect:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Class<T>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.jvm.functions.Function1<T, Boolean>"
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.jvm.functions.Function1<T, kotlin.Unit>"
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.testing.core.Expect<E, T>"
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        match:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
        expectClosure:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, kotlin.Unit>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getClazz:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Class<T>
    getExpectClosure:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.jvm.functions.Function1<T, kotlin.Unit>"
    getMatch:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.jvm.functions.Function1<T, Boolean>"
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.core.ExpectCompose:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.core.ExpectCompose$Parallel:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectCompose<E>
  implements: []
  interface: false
  methods:
    getParallel:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.core.ExpectCompose<E>>
net.corda.testing.core.ExpectCompose$Sequential:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectCompose<E>
  implements: []
  interface: false
  methods:
    getSequence:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.core.ExpectCompose<E>>
net.corda.testing.core.ExpectCompose$Single:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectCompose<E>
  implements: []
  interface: false
  methods:
    getExpect:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.testing.core.Expect<E, T>"
net.corda.testing.core.ExpectComposeState$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromExpectCompose:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.core.ExpectComposeState<E>
      params:
        expectCompose:
          annotation:
            - NotNull
          type: net.corda.testing.core.ExpectCompose<? extends E>
net.corda.testing.core.ExpectComposeState$Finished:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectComposeState
  implements: []
  interface: false
  methods:
    getExpectedEvents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<Class<E>>
    nextState:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: Void
      params:
        event:
          annotation:
            - NotNull
          type: E
net.corda.testing.core.ExpectComposeState$Parallel:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectComposeState
  implements: []
  interface: false
  methods:
    getExpectedEvents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<Class<? extends E>>
    getParallel:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.core.ExpectCompose$Parallel<E>
    getStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.core.ExpectComposeState<E>>
    nextState:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: "kotlin.Pair<kotlin.jvm.functions.Function0<kotlin.Unit>, net.corda.testing.core.ExpectComposeState<E>>"
      params:
        event:
          annotation:
            - NotNull
          type: E
net.corda.testing.core.ExpectComposeState$Sequential:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectComposeState
  implements: []
  interface: false
  methods:
    getExpectedEvents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<Class<? extends E>>
    getIndex:
      annotations: []
      default: false
      type: public final
      returnType: int
    getSequential:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.core.ExpectCompose$Sequential<E>
    getState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.core.ExpectComposeState<E>
    nextState:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: "kotlin.Pair<kotlin.jvm.functions.Function0<kotlin.Unit>, net.corda.testing.core.ExpectComposeState<E>>"
      params:
        event:
          annotation:
            - NotNull
          type: E
net.corda.testing.core.ExpectComposeState$Single:
  annotations: []
  type: public static final class
  extends: net.corda.testing.core.ExpectComposeState
  implements: []
  interface: false
  methods:
    getExpectedEvents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<Class<T>>
    getSingle:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.testing.core.ExpectCompose$Single<E, T>"
    nextState:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: "kotlin.Pair<kotlin.jvm.functions.Function0<kotlin.Unit>, net.corda.testing.core.ExpectComposeState<E>>"
      params:
        event:
          annotation:
            - NotNull
          type: E
net.corda.testing.core.ExpectKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    expect:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.testing.core.ExpectCompose<E>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super E, kotlin.Unit>"
    expectEvents:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        $this$expectEvents:
          annotation:
            - NotNull
          type: Iterable<? extends E>
        isStrict:
          annotation: []
          type: boolean
        expectCompose:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends net.corda.testing.core.ExpectCompose<?
            extends E>>
    genericExpectEvents:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        $this$genericExpectEvents:
          annotation: []
          type: S
        isStrict:
          annotation: []
          type: boolean
        stream:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function2<? super S, ? super kotlin.jvm.functions.Function1<?\
            \ super E, kotlin.Unit>, kotlin.Unit>"
        expectCompose:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends net.corda.testing.core.ExpectCompose<?
            extends E>>
    parallel:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.core.ExpectCompose<E>
      params:
        expectations:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.testing.core.ExpectCompose<? extends
            E>>
    replicate:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.core.ExpectCompose<E>
      params:
        number:
          annotation: []
          type: int
        expectation:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super Integer, ? extends net.corda.testing.core.ExpectCompose<?\
            \ extends E>>"
    sequence:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.core.ExpectCompose<E>
      params:
        expectations:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.testing.core.ExpectCompose<? extends
            E>>
net.corda.testing.core.SerializationEnvironmentRule:
  annotations: []
  type: public final class
  extends: null
  implements:
    - org.junit.rules.TestRule
  interface: false
  methods:
    apply:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: org.junit.runners.model.Statement
      params:
        base:
          annotation:
            - NotNull
          type: org.junit.runners.model.Statement
        description:
          annotation:
            - NotNull
          type: org.junit.runner.Description
    getSerializationFactory:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.serialization.SerializationFactory
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.core.SerializationEnvironmentRule$Companion
net.corda.testing.core.SerializationEnvironmentRule$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.core.TestConstants:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    dummyCommand:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.contracts.Command<net.corda.core.contracts.TypeOnlyCommandData>
      params:
        signers:
          annotation:
            - NotNull
          type: "java.security.PublicKey[]"
  fields:
    DUMMY_NOTARY_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    DUMMY_BANK_A_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    DUMMY_BANK_B_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    DUMMY_BANK_C_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    BOC_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    ALICE_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    BOB_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    CHARLIE_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    DAVE_NAME:
      annotation:
        - NotNull
      type: public static final net.corda.core.identity.CordaX500Name
    MAX_MESSAGE_SIZE:
      annotation: []
      type: public static final int
      initialised value: 10485760
net.corda.testing.core.TestIdentity:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    fresh:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.core.TestIdentity
      params:
        organisation:
          annotation:
            - NotNull
          type: String
    getIdentity:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.PartyAndCertificate
    getKeyPair:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.security.KeyPair
    getName:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    getParty:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    getPublicKey:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.security.PublicKey
    ref:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.PartyAndReference
      params:
        bytes:
          annotation:
            - NotNull
          type: "byte[]"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.core.TestIdentity$Companion
net.corda.testing.core.TestIdentity$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fresh:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.core.TestIdentity
      params:
        organisation:
          annotation:
            - NotNull
          type: String
net.corda.testing.core.TestUtils:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    createCRL:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.security.cert.X509CRL
      params:
        issuer:
          annotation:
            - NotNull
          type: net.corda.nodeapi.internal.crypto.CertificateAndKeyPair
        revokedCerts:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.cert.X509Certificate>
        issuingDistPoint:
          annotation:
            - Nullable
          type: java.net.URI
        thisUpdate:
          annotation:
            - NotNull
          type: java.time.Instant
        nextUpdate:
          annotation:
            - NotNull
          type: java.time.Instant
        indirect:
          annotation: []
          type: boolean
        revocationDate:
          annotation:
            - NotNull
          type: java.time.Instant
        crlReason:
          annotation: []
          type: int
        signatureAlgorithm:
          annotation:
            - NotNull
          type: String
    executeTest:
      annotations: []
      default: false
      type: public static final
      returnType: T
      params:
        timeout:
          annotation:
            - NotNull
          type: java.time.Duration
        cleanup:
          annotation:
            - Nullable
          type: kotlin.jvm.functions.Function0<kotlin.Unit>
        retryDelay:
          annotation:
            - NotNull
          type: java.time.Duration
        block:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends T>
    freeLocalHostAndPort:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    freePort:
      annotations: []
      default: false
      type: public static final
      returnType: int
    generateStateRef:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.contracts.StateRef
    getFreeLocalPorts:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.util.List<net.corda.core.utilities.NetworkHostAndPort>
      params:
        hostName:
          annotation:
            - NotNull
          type: String
        numberToAlloc:
          annotation: []
          type: int
    getTestPartyAndCertificate:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.PartyAndCertificate
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
    makeUnique:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.CordaX500Name
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    singleIdentity:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.Party
      params:
        $this$singleIdentity:
          annotation:
            - NotNull
          type: net.corda.core.node.NodeInfo
    singleIdentityAndCert:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.PartyAndCertificate
      params:
        $this$singleIdentityAndCert:
          annotation:
            - NotNull
          type: net.corda.core.node.NodeInfo