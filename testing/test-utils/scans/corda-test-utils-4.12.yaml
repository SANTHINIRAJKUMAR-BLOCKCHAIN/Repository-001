# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.finance.test.CashSchema:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.CashSchema
net.corda.finance.test.SampleCashSchemaV1:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV1
net.corda.finance.test.SampleCashSchemaV1$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getCurrency:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuerPartyHash:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuerRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "byte[]"
    getOwnerHash:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getPennies:
      annotations: []
      default: false
      type: public
      returnType: long
    setCurrency:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuerPartyHash:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuerRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: "byte[]"
    setOwnerHash:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setPennies:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
net.corda.finance.test.SampleCashSchemaV2:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV2
net.corda.finance.test.SampleCashSchemaV2$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.CommonSchemaV1$FungibleState
  implements: []
  interface: false
  methods:
    getCurrency:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getParticipants:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    setCurrency:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setParticipants:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
net.corda.finance.test.SampleCashSchemaV3:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV3
net.corda.finance.test.SampleCashSchemaV3$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getCurrency:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuer:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getIssuerRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "byte[]"
    getOwner:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getParticipants:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    getPennies:
      annotations: []
      default: false
      type: public
      returnType: long
    setCurrency:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuer:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.core.identity.AbstractParty
    setIssuerRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: "byte[]"
    setOwner:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.core.identity.AbstractParty
    setParticipants:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
    setPennies:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
net.corda.testing.dsl.AttachmentResolutionException:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.DoubleSpentInputs:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.DuplicateOutputLabel:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.EnforceVerifyOrFail:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.EnforceVerifyOrFail$Token:
  annotations: []
  type: public static final class
  extends: net.corda.testing.dsl.EnforceVerifyOrFail
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.dsl.EnforceVerifyOrFail$Token
net.corda.testing.dsl.LedgerDSL:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.LedgerDSLInterpreter
  interface: false
  methods:
    _transaction:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    _tweak:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    _unverifiedTransaction:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ kotlin.Unit>"
    attachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    fails:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getInterpreter:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: L
    output:
      annotations: []
      default: false
      type: public final synthetic
      returnType: S
      params:
        "null":
          annotation: []
          type: String
    outputStateAndRef:
      annotations: []
      default: false
      type: public final synthetic
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        "null":
          annotation: []
          type: String
    retrieveOutput:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: S
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    transaction:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    tweak:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSL<?\
            \ extends T, ? extends L>, kotlin.Unit>"
    unverifiedTransaction:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    verifies:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.LedgerDSLInterpreter:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.Verifies
  interface: true
  methods:
    _transaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    _tweak:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<?\
            \ extends T>, kotlin.Unit>"
    _unverifiedTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, kotlin.Unit>"
    attachment:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    fails:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    verifies:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.OutputStateLookup:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
net.corda.testing.dsl.TestLedgerDSLInterpreter:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.LedgerDSLInterpreter
  interface: false
  methods:
    _transaction:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    _tweak:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TestTransactionDSLInterpreter>,\
            \ kotlin.Unit>"
    _unverifiedTransaction:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ kotlin.Unit>"
    attachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServiceHub
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
      params:
        services:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        labelToOutputStateAndRefs:
          annotation:
            - NotNull
          type: "java.util.HashMap<String, net.corda.core.contracts.StateAndRef<net.corda.core.contracts.ContractState>>"
        transactionWithLocations:
          annotation:
            - NotNull
          type: "java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>"
        nonVerifiedTransactionWithLocations:
          annotation:
            - NotNull
          type: "java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fails:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getServices:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServiceHub
    getTransactionsToVerify:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    getTransactionsUnverified:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    getWireTransactions:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    outputToLabel:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    transactionName:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
      params:
        transactionHash:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    verifies:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion
net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$TypeMismatch:
  annotations: []
  type: public static final class
  extends: java.lang.Exception
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$VerifiesFailed:
  annotations: []
  type: public static final class
  extends: java.lang.Exception
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
    component3:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation
      params:
        label:
          annotation:
            - Nullable
          type: String
        transaction:
          annotation:
            - NotNull
          type: net.corda.core.transactions.WireTransaction
        location:
          annotation:
            - Nullable
          type: String
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getLabel:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getLocation:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getTransaction:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.dsl.TestTransactionDSLInterpreter:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.TransactionDSLInterpreter
  interface: false
  methods:
    _attachment:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    _tweak:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    command:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestTransactionDSLInterpreter
      params:
        ledgerInterpreter:
          annotation:
            - NotNull
          type: net.corda.testing.dsl.TestLedgerDSLInterpreter
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        labelToIndexMap:
          annotation:
            - NotNull
          type: "java.util.HashMap<String, Integer>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fails:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
    getServices:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServicesForResolution
    getTransactionBuilder:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    input:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    output:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - Nullable
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        attachmentConstraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.core.contracts.TimeWindow
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    verifies:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.TransactionDSL:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.TransactionDSLInterpreter
  interface: false
  methods:
    _attachment:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    _tweak:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    attachments:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: "String[]"
    command:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        signer:
          annotation:
            - NotNull
          type: java.security.PublicKey
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    fails:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TransactionDSLInterpreter>
    input:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        time:
          annotation:
            - NotNull
          type: java.time.Instant
    tweak:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    verifies:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.TransactionDSLInterpreter:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.Verifies
  interface: true
  methods:
    _attachment:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    _tweak:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    command:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    fails:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TransactionDSLInterpreter>
    input:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    output:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - Nullable
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        attachmentConstraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    retrieveOutputStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.core.contracts.TimeWindow
    verifies:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.Verifies:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    fails:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    fails with:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    failsWith:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    verifies:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.http.HttpApi:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getJson:
      annotations: []
      default: false
      type: public final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: "java.util.Map<String, String>"
    getMapper:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: com.fasterxml.jackson.databind.ObjectMapper
    getRoot:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.net.URL
    postJson:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: Object
    postPlain:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: String
    putJson:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: Object
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.http.HttpApi$Companion
net.corda.testing.http.HttpApi$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromHostAndPort:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.http.HttpApi
      params:
        hostAndPort:
          annotation:
            - NotNull
          type: net.corda.core.utilities.NetworkHostAndPort
        base:
          annotation:
            - NotNull
          type: String
        protocol:
          annotation:
            - NotNull
          type: String
        mapper:
          annotation:
            - NotNull
          type: com.fasterxml.jackson.databind.ObjectMapper
net.corda.testing.http.HttpUtils:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getDefaultMapper:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: com.fasterxml.jackson.databind.ObjectMapper
    getJson:
      annotations: []
      default: false
      type: public final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: com.fasterxml.jackson.databind.ObjectMapper
    postJson:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
    postPlain:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
    putJson:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.http.HttpUtils
net.corda.testing.internal.FlowStackSnapshotFactoryImpl:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.node.services.statemachine.FlowStackSnapshotFactory
  interface: false
  methods:
    getFlowStackSnapshot:
      annotations:
        - Suspendable
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.flows.FlowStackSnapshot
      params:
        flowClass:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<?>>
    persistAsJsonFile:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        flowClass:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<?>>
        baseDir:
          annotation:
            - NotNull
          type: java.nio.file.Path
        flowId:
          annotation:
            - NotNull
          type: net.corda.core.flows.StateMachineRunId
net.corda.testing.internal.FlowStackSnapshotFactoryImpl$ThreadLocalIndex$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    getCurrentIndex:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: ThreadLocal<Integer>
net.corda.testing.internal.FlowStackSnapshotKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.internal.InternalTestUtilsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    amqpSpecific:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: void
      params:
        "null":
          annotation: []
          type: kotlin.jvm.functions.Function0<kotlin.Unit>
    chooseIdentity:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.Party
      params:
        $this$chooseIdentity:
          annotation:
            - NotNull
          type: net.corda.core.node.NodeInfo
    chooseIdentityAndCert:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.identity.PartyAndCertificate
      params:
        $this$chooseIdentityAndCert:
          annotation:
            - NotNull
          type: net.corda.core.node.NodeInfo
    configureDatabase:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.nodeapi.internal.persistence.CordaPersistence
      params:
        hikariProperties:
          annotation:
            - NotNull
          type: java.util.Properties
        databaseConfig:
          annotation:
            - NotNull
          type: net.corda.nodeapi.internal.persistence.DatabaseConfig
        wellKnownPartyFromX500Name:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.identity.CordaX500Name,\
            \ net.corda.core.identity.Party>"
        wellKnownPartyFromAnonymous:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.identity.AbstractParty,\
            \ net.corda.core.identity.Party>"
        schemaService:
          annotation:
            - NotNull
          type: net.corda.node.services.api.SchemaService
        internalSchemas:
          annotation:
            - NotNull
          type: java.util.Set<? extends net.corda.core.schemas.MappedSchema>
        cacheFactory:
          annotation:
            - NotNull
          type: net.corda.core.internal.NamedCacheFactory
        ourName:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        runMigrationScripts:
          annotation: []
          type: boolean
        allowHibernateToManageAppSchema:
          annotation: []
          type: boolean
    createDevIntermediateCaCertPath:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.crypto.CertificateAndKeyPair,\
        \ net.corda.nodeapi.internal.crypto.CertificateAndKeyPair>"
      params:
        rootCaName:
          annotation:
            - NotNull
          type: javax.security.auth.x500.X500Principal
        intermediateCaName:
          annotation:
            - NotNull
          type: javax.security.auth.x500.X500Principal
    createDevNodeCaCertPath:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Triple<net.corda.nodeapi.internal.crypto.CertificateAndKeyPair,\
        \ net.corda.nodeapi.internal.crypto.CertificateAndKeyPair, net.corda.nodeapi.internal.crypto.CertificateAndKeyPair>"
      params:
        legalName:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        nodeKeyPair:
          annotation:
            - NotNull
          type: java.security.KeyPair
        rootCaName:
          annotation:
            - NotNull
          type: javax.security.auth.x500.X500Principal
        intermediateCaName:
          annotation:
            - NotNull
          type: javax.security.auth.x500.X500Principal
    createWireTransaction:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.contracts.StateRef>
        attachments:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.crypto.SecureHash>
        outputs:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.contracts.TransactionState<?>>
        commands:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.contracts.Command<?>>
        notary:
          annotation:
            - Nullable
          type: net.corda.core.identity.Party
        timeWindow:
          annotation:
            - Nullable
          type: net.corda.core.contracts.TimeWindow
        privacySalt:
          annotation:
            - NotNull
          type: net.corda.core.contracts.PrivacySalt
        digestService:
          annotation:
            - NotNull
          type: net.corda.core.crypto.DigestService
    fakeAttachment:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "byte[]"
      params:
        filePath1:
          annotation:
            - NotNull
          type: String
        content1:
          annotation:
            - NotNull
          type: String
        filePath2:
          annotation:
            - NotNull
          type: String
        content2:
          annotation:
            - NotNull
          type: String
        manifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    fixedCrlSource:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.nodeapi.internal.protonwrapper.netty.CrlSource
      params:
        crls:
          annotation:
            - NotNull
          type: java.util.Set<? extends java.security.cert.X509CRL>
    fromUserList:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.node.internal.security.RPCSecurityManagerImpl
      params:
        $this$fromUserList:
          annotation:
            - NotNull
          type: net.corda.node.internal.security.RPCSecurityManagerImpl$Companion
        id:
          annotation:
            - NotNull
          type: net.corda.core.context.AuthServiceId
        users:
          annotation:
            - NotNull
          type: java.util.List<net.corda.nodeapi.internal.config.User>
    isLocalPortBound:
      annotations: []
      default: false
      type: public static final
      returnType: boolean
      params:
        port:
          annotation: []
          type: int
    kryoSpecific:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: void
      params:
        "null":
          annotation: []
          type: kotlin.jvm.functions.Function0<kotlin.Unit>
    p2pSslOptions:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.nodeapi.internal.config.MutualSslConfiguration
      params:
        path:
          annotation:
            - NotNull
          type: java.nio.file.Path
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    useSslRpcOverrides:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "java.util.Map<String, String>"
      params:
        $this$useSslRpcOverrides:
          annotation:
            - NotNull
          type: net.corda.nodeapi.BrokerRpcSslOptions
    withTestSerializationEnvIfNotSet:
      annotations: []
      default: false
      type: public static final
      returnType: R
      params:
        block:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends R>
  fields:
    IS_S390X:
      annotation: []
      type: public static final boolean
net.corda.testing.internal.LogHelper:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    reset:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        classes:
          annotation:
            - NotNull
          type: "kotlin.reflect.KClass<?>[]"
    setLevel:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        classes:
          annotation:
            - NotNull
          type: "kotlin.reflect.KClass<?>[]"
    withLevel:
      annotations: []
      default: false
      type: public final
      returnType: T
      params:
        logName:
          annotation:
            - NotNull
          type: String
        levelName:
          annotation:
            - NotNull
          type: String
        block:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends T>
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.LogHelper
net.corda.testing.internal.MockCordappConfigProvider:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.node.internal.cordapp.CordappConfigProvider
  interface: false
  methods:
    getConfigByName:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: com.typesafe.config.Config
      params:
        name:
          annotation:
            - NotNull
          type: String
    getCordappConfigs:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, com.typesafe.config.Config>"
net.corda.testing.internal.MockCordappProvider:
  annotations: []
  type: public final class
  extends: net.corda.node.internal.cordapp.CordappProviderImpl
  implements: []
  interface: false
  methods:
    addMockCordapp:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachments:
          annotation:
            - NotNull
          type: net.corda.testing.services.MockAttachmentStorage
        contractHash:
          annotation:
            - Nullable
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    getContractAttachmentID:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
net.corda.testing.internal.TestingNamedCacheFactory:
  annotations: []
  type: public final class
  extends: net.corda.core.serialization.SingletonSerializeAsToken
  implements:
    - net.corda.node.utilities.BindableNamedCacheFactory
  interface: false
  methods:
    bindWithConfig:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.node.utilities.BindableNamedCacheFactory
      params:
        nodeConfiguration:
          annotation:
            - NotNull
          type: net.corda.node.services.config.NodeConfiguration
    bindWithMetrics:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.node.utilities.BindableNamedCacheFactory
      params:
        metricRegistry:
          annotation:
            - NotNull
          type: com.codahale.metrics.MetricRegistry
    buildNamed:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "com.github.benmanes.caffeine.cache.LoadingCache<K, V>"
      params:
        caffeine:
          annotation:
            - NotNull
          type: "com.github.benmanes.caffeine.cache.Caffeine<? super K, ? super V>"
        name:
          annotation:
            - NotNull
          type: String
        loader:
          annotation:
            - NotNull
          type: "com.github.benmanes.caffeine.cache.CacheLoader<K, V>"
net.corda.testing.internal.services.InternalMockAttachmentStorage:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.node.services.AttachmentStorage
    - net.corda.node.services.persistence.AttachmentStorageInternal
  interface: false
  methods:
    getAllAttachmentsByCriteria:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "java.util.stream.Stream<kotlin.Pair<String, net.corda.core.contracts.Attachment>>"
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.AttachmentQueryCriteria
    getLatestContractAttachments:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        minContractVersion:
          annotation: []
          type: int
    hasAttachment:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    importAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    importOrGetAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    openAttachment:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.contracts.Attachment
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    privilegedImportAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    privilegedImportOrGetAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    queryAttachments:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.AttachmentQueryCriteria
        sorting:
          annotation:
            - Nullable
          type: net.corda.core.node.services.vault.AttachmentSort
net.corda.testing.internal.vault.CommodityState:
  annotations:
    - BelongsToContract
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.FungibleAsset
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<net.corda.finance.contracts.Commodity>>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.AbstractParty
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.internal.vault.CommodityState
      params:
        amount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<net.corda.finance.contracts.Commodity>>
        owner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getAmount:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<net.corda.finance.contracts.Commodity>>
    getExitKeys:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.Set<java.security.PublicKey>
    getOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withNewOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.CommandAndState
      params:
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    withNewOwnerAndAmount:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.FungibleAsset<net.corda.finance.contracts.Commodity>
      params:
        newAmount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<net.corda.finance.contracts.Commodity>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.internal.vault.DummyDealContract:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.Contract
  interface: false
  methods:
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
net.corda.testing.internal.vault.DummyDealContract$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.schemas.QueryableState
    - net.corda.finance.contracts.DealState
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.UniqueIdentifier
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.internal.vault.DummyDealContract$State
      params:
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
        linearId:
          annotation:
            - NotNull
          type: net.corda.core.contracts.UniqueIdentifier
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    generateAgreement:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.TransactionBuilder
      params:
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
    generateMappedObject:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.schemas.PersistentState
      params:
        schema:
          annotation:
            - NotNull
          type: net.corda.core.schemas.MappedSchema
    getLinearId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.UniqueIdentifier
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    supportedSchemas:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Iterable<net.corda.core.schemas.MappedSchema>
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.internal.vault.DummyDealContractKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    DUMMY_DEAL_PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.internal.vault.DummyDealContract
net.corda.testing.internal.vault.DummyDealStateSchema:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.DummyDealStateSchema
net.corda.testing.internal.vault.DummyDealStateSchemaV1:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.DummyDealStateSchemaV1
net.corda.testing.internal.vault.DummyDealStateSchemaV1$PersistentDummyDealState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.CommonSchemaV1$LinearState
  implements: []
  interface: false
  methods:
    getParticipants:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    getUid:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.UniqueIdentifier
    setParticipants:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
net.corda.testing.internal.vault.DummyLinearContract:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.Contract
  interface: false
  methods:
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
net.corda.testing.internal.vault.DummyLinearContract$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.LinearState
    - net.corda.core.schemas.QueryableState
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.UniqueIdentifier
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component4:
      annotations: []
      default: false
      type: public final
      returnType: long
    component5:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    component6:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component7:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.internal.vault.DummyLinearContract$State
      params:
        linearId:
          annotation:
            - NotNull
          type: net.corda.core.contracts.UniqueIdentifier
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
        linearString:
          annotation:
            - NotNull
          type: String
        linearNumber:
          annotation: []
          type: long
        linearTimestamp:
          annotation:
            - NotNull
          type: java.time.Instant
        linearBoolean:
          annotation: []
          type: boolean
        nonce:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    generateMappedObject:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.schemas.PersistentState
      params:
        schema:
          annotation:
            - NotNull
          type: net.corda.core.schemas.MappedSchema
    getLinearBoolean:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getLinearId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.UniqueIdentifier
    getLinearNumber:
      annotations: []
      default: false
      type: public final
      returnType: long
    getLinearString:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getLinearTimestamp:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    getNonce:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    supportedSchemas:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Iterable<net.corda.core.schemas.MappedSchema>
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.internal.vault.DummyLinearContractKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    DUMMY_LINEAR_CONTRACT_PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.internal.vault.DummyLinearContract
net.corda.testing.internal.vault.DummyLinearStateSchema:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.DummyLinearStateSchema
net.corda.testing.internal.vault.DummyLinearStateSchemaV1:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.DummyLinearStateSchemaV1
net.corda.testing.internal.vault.DummyLinearStateSchemaV1$PersistentDummyLinearState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getExternalId:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getLinearBoolean:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getLinearNumber:
      annotations: []
      default: false
      type: public
      returnType: long
    getLinearString:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getLinearTimestamp:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Instant
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    getUuid:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.UUID
    setExternalId:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setLinearBoolean:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: boolean
    setLinearNumber:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
    setLinearString:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setLinearTimestamp:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.time.Instant
    setParticipants:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.AbstractParty>
    setUuid:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.util.UUID
net.corda.testing.internal.vault.DummyLinearStateSchemaV2:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.DummyLinearStateSchemaV2
net.corda.testing.internal.vault.DummyLinearStateSchemaV2$PersistentDummyLinearState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.CommonSchemaV1$LinearState
  implements: []
  interface: false
  methods:
    getLinearBoolean:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getLinearNumber:
      annotations: []
      default: false
      type: public
      returnType: long
    getLinearString:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getLinearTimestamp:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Instant
    getParticipants:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    getUid:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.UniqueIdentifier
    setLinearBoolean:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: boolean
    setLinearNumber:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
    setLinearString:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setLinearTimestamp:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.time.Instant
    setParticipants:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
net.corda.testing.internal.vault.UniqueDummyFungibleContract:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.Contract
  interface: false
  methods:
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
net.corda.testing.internal.vault.UniqueDummyFungibleContract$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.FungibleAsset
    - net.corda.core.schemas.QueryableState
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<java.util.Currency>>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.AbstractParty
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.internal.vault.UniqueDummyFungibleContract$State
      params:
        amount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<java.util.Currency>>
        owner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    generateMappedObject:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.schemas.PersistentState
      params:
        schema:
          annotation:
            - NotNull
          type: net.corda.core.schemas.MappedSchema
    getAmount:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<java.util.Currency>>
    getExitKeys:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.Set<java.security.PublicKey>
    getOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    supportedSchemas:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Iterable<net.corda.core.schemas.MappedSchema>
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withNewOwner:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.CommandAndState
      params:
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    withNewOwnerAndAmount:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.FungibleAsset<java.util.Currency>
      params:
        newAmount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<net.corda.core.contracts.Issued<java.util.Currency>>
        newOwner:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
net.corda.testing.internal.vault.UniqueDummyFungibleContractKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    UNIQUE_DUMMY_FUNGIBLE_CONTRACT_PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.internal.vault.UniqueDummyFungibleContract
net.corda.testing.internal.vault.UniqueDummyFungibleStateSchema:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.UniqueDummyFungibleStateSchema
net.corda.testing.internal.vault.UniqueDummyFungibleStateSchema$UniquePersistentDummyFungibleState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getCurrency:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.internal.vault.UniqueDummyLinearContract:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.contracts.Contract
  interface: false
  methods:
    verify:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.core.transactions.LedgerTransaction
net.corda.testing.internal.vault.UniqueDummyLinearContract$State:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.core.contracts.LinearState
    - net.corda.core.schemas.QueryableState
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.UniqueIdentifier
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.internal.vault.UniqueDummyLinearContract$State
      params:
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
        linearId:
          annotation:
            - NotNull
          type: net.corda.core.contracts.UniqueIdentifier
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    generateMappedObject:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.schemas.PersistentState
      params:
        schema:
          annotation:
            - NotNull
          type: net.corda.core.schemas.MappedSchema
    getLinearId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.UniqueIdentifier
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.AbstractParty>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    supportedSchemas:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Iterable<net.corda.core.schemas.MappedSchema>
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.internal.vault.UniqueDummyLinearContractKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    UNIQUE_DUMMY_LINEAR_CONTRACT_PROGRAM_ID:
      annotation:
        - NotNull
      type: public static final String
      initialised value: net.corda.testing.internal.vault.UniqueDummyLinearContract
net.corda.testing.internal.vault.UniqueDummyLinearStateSchema:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.UniqueDummyLinearStateSchema
net.corda.testing.internal.vault.UniqueDummyLinearStateSchema$UniquePersistentLinearDummyState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.internal.vault.VaultFiller:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    consumeCash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault$Update<net.corda.core.contracts.ContractState>
      params:
        amount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<java.util.Currency>
        to:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    consumeDeals:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        dealStates:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.contracts.StateAndRef<? extends
            net.corda.finance.contracts.DealState>>
    consumeLinearStates:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        linearStates:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.contracts.StateAndRef<? extends
            net.corda.core.contracts.LinearState>>
    consumeStates:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        states:
          annotation:
            - NotNull
          type: Iterable<? extends net.corda.core.contracts.StateAndRef<?>>
    evolveLinearState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.StateAndRef<net.corda.core.contracts.LinearState>
      params:
        linearState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateAndRef<? extends net.corda.core.contracts.LinearState>
    evolveLinearStates:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        linearStates:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.contracts.StateAndRef<? extends
            net.corda.core.contracts.LinearState>>
    fillWithDummyState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.testing.contracts.DummyState>
      params:
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
    fillWithSomeTestCash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.finance.contracts.asset.Cash$State>
      params:
        howMuch:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<java.util.Currency>
        issuerServices:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        atLeastThisManyStates:
          annotation: []
          type: int
        issuedBy:
          annotation:
            - NotNull
          type: net.corda.core.contracts.PartyAndReference
    fillWithSomeTestCommodity:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.testing.internal.vault.CommodityState>
      params:
        amount:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<net.corda.finance.contracts.Commodity>
        issuerServices:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        issuedBy:
          annotation:
            - NotNull
          type: net.corda.core.contracts.PartyAndReference
    fillWithSomeTestDeals:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.finance.contracts.DealState>
      params:
        dealIds:
          annotation:
            - NotNull
          type: java.util.List<String>
    fillWithSomeTestLinearAndDealStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.core.contracts.ContractState>
      params:
        txCount:
          annotation: []
          type: int
    fillWithSomeTestLinearStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<net.corda.core.contracts.LinearState>
      params:
        txCount:
          annotation: []
          type: int
    fillWithTestStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.services.Vault<T>
      params:
        txCount:
          annotation: []
          type: int
        statesPerTx:
          annotation: []
          type: int
        participants:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.core.identity.AbstractParty>
        constraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        includeMe:
          annotation: []
          type: boolean
        services:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        genOutputState:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function3<? super java.util.List<? extends net.corda.core.identity.AbstractParty>,\
            \ ? super Integer, ? super Integer, ? extends T>"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.internal.vault.VaultFiller$Companion
net.corda.testing.internal.vault.VaultFiller$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    calculateRandomlySizedAmounts:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "long[]"
      params:
        howMuch:
          annotation:
            - NotNull
          type: net.corda.core.contracts.Amount<java.util.Currency>
        min:
          annotation: []
          type: int
        max:
          annotation: []
          type: int
        rng:
          annotation:
            - NotNull
          type: java.util.Random
net.corda.testing.services.MockAttachmentStorage:
  annotations: []
  type: public final class
  extends: net.corda.core.serialization.SingletonSerializeAsToken
  implements:
    - net.corda.core.node.services.AttachmentStorage
  interface: false
  methods:
    getAttachmentIdAndBytes:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.core.crypto.SecureHash, byte[]>"
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    getFiles:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<net.corda.core.crypto.SecureHash, kotlin.Pair<net.corda.core.contracts.Attachment,\
        \ byte[]>>"
    getLatestContractAttachments:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        minContractVersion:
          annotation: []
          type: int
    hasAttachment:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    importAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    importContractAttachment:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: java.util.List<String>
        uploader:
          annotation:
            - NotNull
          type: String
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    importOrGetAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    openAttachment:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.contracts.Attachment
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    queryAttachments:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.AttachmentQueryCriteria
        sorting:
          annotation:
            - Nullable
          type: net.corda.core.node.services.vault.AttachmentSort