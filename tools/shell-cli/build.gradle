buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

description 'Corda Shell CLI'

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources {
            srcDir file('src/integration-test/resources')
        }
    }
    test {
        resources {
            srcDir file('src/test/resources')
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    compile project(':tools:shell')

    // Unit testing helpers.
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:${assertj_version}"
    testCompile project(':test-utils')
    testCompile project(':finance')

}

mainClassName = 'net.corda.tools.shell.StandaloneShellKt'

jar {
    baseName 'corda-shell-cli'
}

processResources {
    from file("$rootDir/config/dev/log4j2.xml")
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = "corda-tools-shell-cli"
        }
    }
}

shadowJar  {
    //transform(de.sebastianboegl.gradle.plugins.shadow.transformers.Log4j2PluginsFileTransformer)
    archiveName = "corda-shell-cli-${version}.jar"

    baseName = 'corda-shell-cli'
    classifier = null
    mainClassName = 'net.corda.tools.shell.StandaloneShellKt'
    mergeServiceFiles()
}

task buildShellCli(dependsOn: shadowJar)
