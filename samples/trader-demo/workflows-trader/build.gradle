apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordapp'

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // The trader demo CorDapp depends upon Cash CorDapp features
    cordapp project(':finance:contracts')
    cordapp project(':finance:workflows')
    cordapp project(':confidential-identities')
    cordapp project(':samples:bank-of-corda-demo')

    // Corda integration dependencies
    cordaCompile project(':core')

    testCompile project(':test-utils')
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:${assertj_version}"

    integrationTestCompile project(':finance:workflows')
    integrationTestCompile project(':finance:contracts')
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

jar {
    baseName 'corda-trader-demo-workflows'
}

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion 1
    workflow {
        name "Trader Demo"
        versionId 1
        vendor "R3"
        licence "Open Source (Apache 2)"
    }
}