apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'



dependencies {
    cordaCompile project(":core")
    cordaCompile project(":node-api")
    cordapp project(":finance")
    cordaRuntime project(path: ":node:capsule", configuration: 'runtimeArtifacts')
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    node {
        name "O=Notary Service,L=Zurich,C=CH"
        notary = [validating: true]
        p2pPort 10002
        rpcSettings {
            address "localhost:10003"
            adminAddress "localhost:10004"
        }
    }
    //should use net.corda.flows.overrides.SubResponder
    node {
        name "O=BankOfCorda,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address "localhost:10006"
            adminAddress "localhost:10015"
        }
        rpcUsers = [[user: "bankUser", password: "test", permissions: ["ALL"]]]
    }

    //should use net.corda.flows.overrides.OverridenResponder
    node {
        name "O=BigCorporation,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address "localhost:10009"
            adminAddress "localhost:10011"
        }
        flowOverride("net.corda.flows.overrides.Initiator", "net.corda.flows.overrides.OverridenResponder")
        rpcUsers = [[user: "bigCorpUser", password: "test", permissions: ["ALL"]]]
    }

    //should use net.corda.flows.overrides.BaseResponder
    node {
        name "O=BigCorporationWithLegacyBackend,L=New York,C=US"
        p2pPort 10018
        rpcSettings {
            address "localhost:10029"
            adminAddress "localhost:10021"
        }
        flowOverride("net.corda.flows.overrides.Initiator", "net.corda.flows.overrides.BaseResponder")
        rpcUsers = [[user: "bigCorpUser", password: "test", permissions: ["ALL"]]]
    }
}

cordapp {
    info {
        name "net/corda/samples/flow-override-demo"
        vendor "Corda Open Source"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}