Running a node
==============

.. note:: You should already have deployed your node(s) with their CorDapps installed by following the instructions in
   :doc:`deploying-a-node`.

Starting your node
------------------

With runnodes (for testing on a local machine only)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note:: ``runnodes`` is a shell script (or batch file on Windows) that is generated by ``deployNodes`` to allow you
   to quickly start up all nodes and their webservers. ``runnodes`` should only be used for testing purposes.

Start the nodes with ``runnodes`` by running the following command from the root of the project:

* Unix/Mac OSX: ``build/nodes/runnodes``
* Windows: ``call build\nodes\runnodes.bat``

.. warn:: On Unix/Mac OSX, do not click/change focus until all the node terminal windows have opened, or some processes
   may fail to start.

Starting the node jars directly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Run each node by opening a terminal window in the node's folder and running:

.. code-block:: shell

   java -jar corda.jar

.. warning:: By default, the node will only look for a configuration file called ``node.conf`` and a CorDapps folder
   called ``cordapps`` in the current working directory. You can override the configuration file and workspace paths on
   the command line (e.g. ``./corda.jar --config-file=test.conf --base-directory=/opt/r3corda/nodes/test``).

Run each node's webserver by opening a terminal window in the node's folder and running:

.. code-block:: shell

   java -jar corda-webserver.jar

Using systemd (recommended)
^^^^^^^^^^^^^^^^^^^^^^^^^^^
We recommend creating system processes to run a node and its webserver, as follows:

1. Create and save the ``corda.service`` and ``corda-webserver.service`` files below

2. Modify the service files as follows:

   * Change the ``user`` field
   * Change the ``WorkingDirectory`` and ``ExecStart`` directories

3. Copy both service files to the ``/etc/systemd/system/`` directory

You can now start a node and its webserver by running the following ``systemctl`` commands:

   * ``systemctl daemon-reload``
   * ``systemctl corda start``
   * ``systemctl corda-webserver start``

The ``corda.service`` file:

.. code-block:: shell

   [Unit]
   Description=Corda Node
   Requires=network.target

   [Service]
   Type=simple
   User=username
   WorkingDirectory=/opt/corda
   ExecStart=/usr/bin/java -Xmx2048m -jar /opt/corda/corda.jar
   Restart=on-failure

   [Install]
   WantedBy=multi-user.target

The ``corda-webserver.service`` file:

.. code-block:: shell

   [Unit]
   Description=Simple webserver for Corda
   Requires=network.target

   [Service]
   Type=simple
   User=username
   WorkingDirectory=/opt/corda
   ExecStart=/usr/bin/java -jar /opt/corda/corda-webserver.jar
   Restart=on-failure

   [Install]
   WantedBy=multi-user.target

Debugging your node
-------------------
To enable remote debugging of the node, run the following from the terminal window:

``java -Dcapsule.jvm.args="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005" -jar corda.jar``

This command line will start the debugger on port 5005 and pause the process awaiting debugger attachment.
