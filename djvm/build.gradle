buildscript {
    ext.asm_version = '6.2'
    ext.picocli_version = '3.0.0-beta-2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "com.jcabi:jcabi-manifests:$jcabi_manifests_version"

    // ASM: byte code manipulation library
    compile "org.ow2.asm:asm:$asm_version"
    compile "org.ow2.asm:asm-tree:$asm_version"
    compile "org.ow2.asm:asm-commons:$asm_version"

    // Classpath scanner
    compile "io.github.lukehutch:fast-classpath-scanner:$fast_classpath_scanner_version"

    // CLI utilities
    compile "info.picocli:picocli:$picocli_version"

    // Test utilities
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
}

jar {
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    baseName 'corda-djvm'
    manifest {
        attributes(
                'Main-Class': 'net.corda.sandbox.tools.cli.Program',
                'Automatic-Module-Name': 'net.corda.sandbox',
                'Build-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}
