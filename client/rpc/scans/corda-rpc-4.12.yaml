# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.client.rpc.ConnectionFailureException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCClient:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    start:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
        targetLegalIdentity:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    use:
      annotations: []
      default: false
      type: public final
      returnType: A
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        block:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.client.rpc.CordaRPCConnection,\
            \ ? extends A>"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClient$Companion
net.corda.client.rpc.CordaRPCClient$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCClientConfiguration:
  annotations: []
  type: public class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Duration
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCacheConcurrencyLevel:
      annotations: []
      default: false
      type: public
      returnType: int
    getConnectionMaxRetryInterval:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getConnectionRetryInterval:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getConnectionRetryIntervalMultiplier:
      annotations: []
      default: false
      type: public
      returnType: double
    getCopyBaggageToTags:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getDeduplicationCacheExpiry:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getMaxFileSize:
      annotations: []
      default: false
      type: public
      returnType: int
    getMaxReconnectAttempts:
      annotations: []
      default: false
      type: public
      returnType: int
    getMinimumServerProtocolVersion:
      annotations: []
      default: false
      type: public
      returnType: int
    getObservationExecutorPoolSize:
      annotations: []
      default: false
      type: public
      returnType: int
    getOpenTelemetryEnabled:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getReapInterval:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getSimpleLogTelemetryEnabled:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getSpanStartEndEventsEnabled:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getTrackRpcCallSites:
      annotations: []
      default: false
      type: public
      returnType: boolean
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClientConfiguration$Companion
    DEFAULT:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClientConfiguration
net.corda.client.rpc.CordaRPCClientConfiguration$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCConnection:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.client.rpc.RPCConnection
  interface: false
  methods:
    close:
      annotations: []
      default: true
      type: public
      returnType: void
    forceClose:
      annotations: []
      default: false
      type: public
      returnType: void
    getProxy:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.CordaRPCOps
    getServerProtocolVersion:
      annotations: []
      default: false
      type: public
      returnType: int
    getTelemetryHandle:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    notifyServerAndClose:
      annotations: []
      default: false
      type: public
      returnType: void
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCConnection$Companion
net.corda.client.rpc.CordaRPCConnection$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.GracefulReconnect:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getMaxAttempts:
      annotations: []
      default: false
      type: public final
      returnType: int
    getOnDisconnect:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: kotlin.jvm.functions.Function0<kotlin.Unit>
    getOnReconnect:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: kotlin.jvm.functions.Function0<kotlin.Unit>
net.corda.client.rpc.MaxRpcRetryException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.PermissionException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements:
    - net.corda.core.ClientRelevantError
    - net.corda.nodeapi.exceptions.RpcSerializableError
  interface: false
  methods:
    getMsg:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
net.corda.client.rpc.RPCConnection:
  annotations: []
  type: public interface
  extends:
    - java.io.Closeable
  interface: true
  methods:
    close:
      annotations: []
      default: true
      type: public
      returnType: void
    forceClose:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    getProxy:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: I
    getServerProtocolVersion:
      annotations: []
      default: false
      type: public abstract
      returnType: int
    getTelemetryHandle:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    notifyServerAndClose:
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.client.rpc.RPCException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.RPCSinceVersion:
  annotations: []
  type: public @interface
  interface: false
  methods:
    version:
      annotations: []
      default: false
      type: public abstract
      returnType: int
net.corda.client.rpc.UnrecoverableRPCException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.UtilsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    notUsed:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        $this$notUsed:
          annotation:
            - NotNull
          type: rx.Observable<T>
net.corda.client.rpc.ext.MultiRPCClient:
  annotations: []
  type: public final class
  extends: null
  implements:
    - java.lang.AutoCloseable
  interface: false
  methods:
    addConnectionListener:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    close:
      annotations: []
      default: false
      type: public
      returnType: void
    removeConnectionListener:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    start:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.concurrent.CompletableFuture<net.corda.client.rpc.RPCConnection<I>>
    stop:
      annotations: []
      default: false
      type: public final
      returnType: void
net.corda.client.rpc.ext.RPCConnectionListener:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    onConnect:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
    onDisconnect:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
    onPermanentFailure:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods:
    getConnectionOpt:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.client.rpc.RPCConnection<I>
    getThrowableOpt:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: Throwable
    getUserName:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: String
net.corda.client.rpc.internal.ClientCacheFactory:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.internal.NamedCacheFactory
  interface: false
  methods:
    buildNamed:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "com.github.benmanes.caffeine.cache.LoadingCache<K, V>"
      params:
        caffeine:
          annotation:
            - NotNull
          type: "com.github.benmanes.caffeine.cache.Caffeine<? super K, ? super V>"
        name:
          annotation:
            - NotNull
          type: String
        loader:
          annotation:
            - NotNull
          type: "com.github.benmanes.caffeine.cache.CacheLoader<K, V>"
net.corda.client.rpc.internal.DistributionMux:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.internal.DistributionMux$Companion
net.corda.client.rpc.internal.DistributionMux$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.internal.RPCClient:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    addConnectionListener:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    removeConnectionListener:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    start:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.RPCConnection<I>
      params:
        rpcOpsClass:
          annotation:
            - NotNull
          type: Class<I>
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
        targetLegalIdentity:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.internal.RPCClient$Companion
net.corda.client.rpc.internal.RPCClient$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.internal.RPCClientProxyHandler:
  annotations: []
  type: public final class
  extends: null
  implements:
    - java.lang.reflect.InvocationHandler
  interface: false
  methods:
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    forceClose:
      annotations: []
      default: false
      type: public final
      returnType: void
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    invoke:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: Object
      params:
        proxy:
          annotation:
            - NotNull
          type: Object
        method:
          annotation:
            - NotNull
          type: reflect.Method
        arguments:
          annotation:
            - Nullable
          type: "Object[]"
    notifyServerAndClose:
      annotations: []
      default: false
      type: public final
      returnType: void
    start:
      annotations: []
      default: false
      type: public final
      returnType: void
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.client.rpc.internal.RPCClientProxyHandler$FailoverHandler:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - org.apache.activemq.artemis.api.core.client.FailoverEventListener
  interface: false
  methods:
    failoverEvent:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        eventType:
          annotation:
            - NotNull
          type: org.apache.activemq.artemis.api.core.client.FailoverEventType
net.corda.client.rpc.internal.RPCClientProxyHandlerKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.internal.RPCClientTelemetry:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getCopyBaggageToTags:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getOpenTelemetryEnabled:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getSimpleLogTelemetryEnabled:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getSpanStartEndEventsEnabled:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getTelemetryHandle:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    getTelemetryService:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.internal.telemetry.TelemetryServiceImpl
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.internal.RPCClientTelemetry$Companion
net.corda.client.rpc.internal.RPCClientTelemetry$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.internal.RPCUtils:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    isShutdown:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        $this$isShutdown:
          annotation:
            - NotNull
          type: reflect.Method
    isShutdownCmd:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        $this$isShutdownCmd:
          annotation:
            - NotNull
          type: net.corda.nodeapi.RPCApi$ClientToServer$RpcRequest
    isShutdownMethodName:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        methodName:
          annotation:
            - NotNull
          type: String
    isStartFlow:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        $this$isStartFlow:
          annotation:
            - NotNull
          type: reflect.Method
    isStartFlowWithClientId:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        $this$isStartFlowWithClientId:
          annotation:
            - NotNull
          type: reflect.Method
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.internal.RPCUtils
net.corda.client.rpc.internal.ReconnectingCordaRPCOps:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.core.messaging.CordaRPCOps
  interface: false
  methods:
    acceptNewNetworkParameters:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        parametersHash:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    addVaultTransactionNote:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        txnId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        txnNote:
          annotation:
            - NotNull
          type: String
    attachmentExists:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    clearNetworkMapCache:
      annotations: []
      default: false
      type: public
      returnType: void
    close:
      annotations: []
      default: false
      type: public final
      returnType: void
    currentNodeTime:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Instant
    finishedFlowsWithClientIds:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "java.util.Map<String, Boolean>"
    finishedFlowsWithClientIdsAsAdmin:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "java.util.Map<String, Boolean>"
    getNetworkParameters:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.NetworkParameters
    getProtocolVersion:
      annotations: []
      default: false
      type: public
      returnType: int
    getReconnectingRPCConnection:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection
    getVaultTransactionNotes:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Iterable<String>
      params:
        txnId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    internalVerifiedTransactionsFeed:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<java.util.List<net.corda.core.transactions.SignedTransaction>,\
        \ net.corda.core.transactions.SignedTransaction>"
    internalVerifiedTransactionsSnapshot:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.transactions.SignedTransaction>
    isFlowsDrainingModeEnabled:
      annotations: []
      default: false
      type: public
      returnType: boolean
    isWaitingForShutdown:
      annotations: []
      default: false
      type: public
      returnType: boolean
    killFlow:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.flows.StateMachineRunId
    networkMapFeed:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<java.util.List<net.corda.core.node.NodeInfo>,\
        \ net.corda.core.node.services.NetworkMapCache$MapChange>"
    networkMapSnapshot:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.node.NodeInfo>
    networkParametersFeed:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.messaging.ParametersUpdateInfo,\
        \ net.corda.core.messaging.ParametersUpdateInfo>"
    nodeDiagnosticInfo:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.NodeDiagnosticInfo
    nodeInfo:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.NodeInfo
    nodeInfoFromParty:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.node.NodeInfo
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    notaryIdentities:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.identity.Party>
    notaryPartyFromX500Name:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.Party
      params:
        x500Name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    openAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.io.InputStream
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    partiesFromName:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.Party>
      params:
        query:
          annotation:
            - NotNull
          type: String
        exactMatch:
          annotation: []
          type: boolean
    partyFromKey:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.Party
      params:
        key:
          annotation:
            - NotNull
          type: java.security.PublicKey
    queryAttachments:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        query:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.AttachmentQueryCriteria
        sorting:
          annotation:
            - Nullable
          type: net.corda.core.node.services.vault.AttachmentSort
    reattachFlowWithClientId:
      annotations:
        - RPCReturnsObservables
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.messaging.FlowHandleWithClientId<T>
      params:
        clientId:
          annotation:
            - NotNull
          type: String
    refreshNetworkMapCache:
      annotations: []
      default: false
      type: public
      returnType: void
    registeredFlows:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<String>
    removeClientId:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        clientId:
          annotation:
            - NotNull
          type: String
    removeClientIdAsAdmin:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        clientId:
          annotation:
            - NotNull
          type: String
    runFlowWithLogicalRetry:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        runFlow:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.messaging.CordaRPCOps,\
            \ net.corda.core.flows.StateMachineRunId>"
        hasFlowStarted:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.messaging.CordaRPCOps,\
            \ Boolean>"
        onFlowConfirmed:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<kotlin.Unit>
        timeout:
          annotation:
            - NotNull
          type: java.time.Duration
    setFlowsDrainingModeEnabled:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        enabled:
          annotation: []
          type: boolean
    shutdown:
      annotations: []
      default: false
      type: public
      returnType: void
    startFlowDynamic:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.FlowHandle<T>
      params:
        logicType:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<? extends T>>
        args:
          annotation:
            - NotNull
          type: "Object[]"
    startFlowDynamicWithClientId:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.FlowHandleWithClientId<T>
      params:
        clientId:
          annotation:
            - NotNull
          type: String
        logicType:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<? extends T>>
        args:
          annotation:
            - NotNull
          type: "Object[]"
    startTrackedFlowDynamic:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.FlowProgressHandle<T>
      params:
        logicType:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<? extends T>>
        args:
          annotation:
            - NotNull
          type: "Object[]"
    stateMachineRecordedTransactionMappingFeed:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<java.util.List<net.corda.core.messaging.StateMachineTransactionMapping>,\
        \ net.corda.core.messaging.StateMachineTransactionMapping>"
    stateMachineRecordedTransactionMappingSnapshot:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.messaging.StateMachineTransactionMapping>
    stateMachinesFeed:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<java.util.List<net.corda.core.messaging.StateMachineInfo>,\
        \ net.corda.core.messaging.StateMachineUpdate>"
    stateMachinesSnapshot:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.messaging.StateMachineInfo>
    terminate:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        drainPendingFlows:
          annotation: []
          type: boolean
    uploadAttachment:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    uploadAttachmentWithMetadata:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - NotNull
          type: String
    vaultQuery:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.Vault$Page<T>
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
    vaultQueryBy:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.Vault$Page<T>
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        paging:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.PageSpecification
        sorting:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.Sort
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
    vaultQueryByCriteria:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.Vault$Page<T>
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
    vaultQueryByWithPagingSpec:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.Vault$Page<T>
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        paging:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.PageSpecification
    vaultQueryByWithSorting:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.Vault$Page<T>
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        sorting:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.Sort
    vaultTrack:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.node.services.Vault$Page<T>,\
        \ net.corda.core.node.services.Vault$Update<T>>"
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
    vaultTrackBy:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.node.services.Vault$Page<T>,\
        \ net.corda.core.node.services.Vault$Update<T>>"
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        paging:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.PageSpecification
        sorting:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.Sort
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
    vaultTrackByCriteria:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.node.services.Vault$Page<T>,\
        \ net.corda.core.node.services.Vault$Update<T>>"
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
    vaultTrackByWithPagingSpec:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.node.services.Vault$Page<T>,\
        \ net.corda.core.node.services.Vault$Update<T>>"
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        paging:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.PageSpecification
    vaultTrackByWithSorting:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "net.corda.core.messaging.DataFeed<net.corda.core.node.services.Vault$Page<T>,\
        \ net.corda.core.node.services.Vault$Update<T>>"
      params:
        contractStateType:
          annotation:
            - NotNull
          type: Class<? extends T>
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.QueryCriteria
        sorting:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.Sort
    waitUntilNetworkReady:
      annotations:
        - RPCReturnsObservables
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<Void>
    wellKnownPartyFromAnonymous:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.Party
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.core.identity.AbstractParty
    wellKnownPartyFromX500Name:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.Party
      params:
        x500Name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection:
  annotations: []
  type: public static final class
  extends: null
  implements:
    - net.corda.client.rpc.RPCConnection
  interface: false
  methods:
    close:
      annotations: []
      default: true
      type: public
      returnType: void
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.utilities.NetworkHostAndPort>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component4:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
    component5:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.messaging.ClientRpcSslOptions
    component6:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: ClassLoader
    component7:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.GracefulReconnect
    component8:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.concurrent.ExecutorService
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection
      params:
        nodeHostAndPorts:
          annotation:
            - NotNull
          type: java.util.List<net.corda.core.utilities.NetworkHostAndPort>
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        rpcConfiguration:
          annotation:
            - NotNull
          type: net.corda.client.rpc.CordaRPCClientConfiguration
        sslConfiguration:
          annotation:
            - Nullable
          type: net.corda.core.messaging.ClientRpcSslOptions
        classLoader:
          annotation:
            - Nullable
          type: ClassLoader
        gracefulReconnect:
          annotation:
            - NotNull
          type: net.corda.client.rpc.GracefulReconnect
        observersPool:
          annotation:
            - NotNull
          type: java.util.concurrent.ExecutorService
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    forceClose:
      annotations: []
      default: false
      type: public
      returnType: void
    getClassLoader:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: ClassLoader
    getGracefulReconnect:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.GracefulReconnect
    getNodeHostAndPorts:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.utilities.NetworkHostAndPort>
    getObserversPool:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.concurrent.ExecutorService
    getPassword:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getProxy:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.CordaRPCOps
    getRpcConfiguration:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
    getServerProtocolVersion:
      annotations: []
      default: false
      type: public
      returnType: int
    getSslConfiguration:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.messaging.ClientRpcSslOptions
    getTelemetryHandle:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    getUsername:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    isClosed:
      annotations: []
      default: false
      type: public final
      returnType: boolean
    notifyServerAndClose:
      annotations: []
      default: false
      type: public
      returnType: void
    reconnectOnError:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        e:
          annotation:
            - NotNull
          type: Throwable
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection$CurrentState:
  annotations: []
  type: public static final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    getEntries:
      annotations:
        - NotNull
      default: false
      type: public static
      returnType: kotlin.enums.EnumEntries<net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection$CurrentState>
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection$CurrentState
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.client.rpc.internal.ReconnectingCordaRPCOps$ReconnectingRPCConnection$CurrentState[]"
net.corda.client.rpc.internal.ReconnectingObservable:
  annotations: []
  type: public final class
  extends: rx.Observable
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.internal.SerializationEnvironmentHelper:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.internal.SerializationEnvironmentHelper
net.corda.client.rpc.reconnect.CouldNotStartFlowException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}